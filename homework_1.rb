#If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
#Find the sum of all the multiples of 3 or 5 below 1000.

sum = (1..999).select { |number| number % 3 == 0 || number % 5 == 0 }.inject { |sum, x| sum + x }
puts "Answer to problem #1 is #{sum}"

#-----------------------------------------
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.

vals = [0,1]
while vals[-1] <= 4000000 do
  vals << vals[-1] + vals[-2]
end
sum = vals.select { |num| num.even? }.inject { |sum, x| sum + x }
puts "Answer to problem #2 is #{sum}"


#-----------------------------------------
# 2520 is the smallest number that can be divided by
# each of the numbers from 1 to 10 without any remainder.
#
# What is the smallest positive number that is evenly divisible
# by all of the numbers from 1 to 20?

# ans = 0
# (232790000..232792561).each do |num|
  # unless (1..20).map{ |i| num % i == 0 }.include?(false)
    # ans = num
    # break
  # end
# end
# puts "Answer to problem #3 is #{ans}"

num = 230000000
until (1..20).map{ |i| num % i == 0 }.uniq == [true]
  num += 20
end
puts "Answer to problem #3 is #{num}"
